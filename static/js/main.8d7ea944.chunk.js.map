{"version":3,"sources":["components/ProductsList.jsx","components/ProductDetail.jsx","components/PageButtons.jsx","components/RecentList.jsx","utils/paginate.js","utils/config.js","pages/ProductPage.js","utils/data/getBrand.js","utils/storage/getStorage.js","pages/RecentListPage.js","pages/ErrorPage.js","App.js","index.js"],"names":["ProductsList","this","props","paginatedProducts","map","product","title","id","isNotInterested","className","onClick","getProductDetail","updateRecentViews","to","Component","ProductDetail","curProduct","brand","price","setIsNotInterested","shuffleProduct","PageButtons","goToPrevPage","bind","goToNextPage","prevPage","page","length","setPage","nextPage","type","_","index","RecentList","goShowDetail","item","date","hour","min","sec","paginate","products","pages","Math","ceil","Array","from","start","slice","ProductPage","state","isLoading","currentProduct","recentViews","pathId","a","setState","fetch","res","json","data","ok","Error","setPathId","updatePaginatedProducts","console","error","newProducts","filter","randomNumber","floor","random","targetProduct","find","newRecentViews","Date","recentViewProduct","unshift","setLocalStorage","localStorage","removeItem","setItem","JSON","stringify","window","location","pathname","split","getBrand","Map","forEach","element","set","today","getDate","storageData","parse","getItem","i","sort","b","RecentListPage","originData","interestToggle","priceSortToggle","recentSortToggle","get","name","newToggle","alert","history","push","entries","isChecked","defaultChecked","onChange","onFilterBrand","e","onInterset","onSortRecent","onSortCheap","getData","getHours","getMinutes","getSeconds","ErrorPage","App","exact","path","component","ReactDOM","render","basename","document","getElementById"],"mappings":"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","file":"static/js/main.8d7ea944.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default class ProductsList extends Component {\r\n  render() {\r\n    return (\r\n      <ul>\r\n        {this.props.paginatedProducts.map((product) => {\r\n          const { title, id, isNotInterested } = product;\r\n\r\n          if (isNotInterested) {\r\n            return (\r\n              <li key={id} className='products-list__product not-interested'>\r\n                <h2>{title}</h2>\r\n              </li>\r\n            );\r\n          }\r\n\r\n          return (\r\n            <li\r\n              className='products-list__product card'\r\n              onClick={() => {\r\n                this.props.getProductDetail(id);\r\n                this.props.updateRecentViews(id);\r\n              }}\r\n              key={id}\r\n            >\r\n              <Link to={`/product/${id}`}>\r\n                <h2>{title}</h2>\r\n              </Link>\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nexport default class ProductDetail extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.product = this.props.curProduct;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <main className='product-detail card'>\r\n        <div className='product-detail__about'>\r\n          <h2>{this.product.title}</h2>\r\n          <div className=\"card bar\"></div>\r\n          <h3>브랜드: {this.product.brand}</h3>\r\n          <p>가격: {this.product.price}</p>\r\n        </div>\r\n\r\n        <button\r\n          className='btn-large card'\r\n          onClick={() => {\r\n            this.props.setIsNotInterested(this.product.id);\r\n            this.props.shuffleProduct();\r\n            this.props.updateRecentViews(this.product.id);\r\n          }}\r\n        >\r\n          관심없음\r\n        </button>\r\n        <button\r\n          className='btn-large card'\r\n          onClick={() => {\r\n            this.props.shuffleProduct();\r\n          }}\r\n        >\r\n          랜덤상품조회\r\n        </button>\r\n      </main>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nexport default class PageButtons extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.goToPrevPage = this.goToPrevPage.bind(this);\r\n    this.goToNextPage = this.goToNextPage.bind(this);\r\n  }\r\n\r\n  goToPrevPage() {\r\n    let prevPage = this.props.page - 1;\r\n\r\n    if (prevPage < 0) prevPage = this.props.paginatedProducts.length - 1;\r\n\r\n    this.props.setPage(prevPage);\r\n  }\r\n\r\n  goToNextPage() {\r\n    let nextPage = this.props.page + 1;\r\n\r\n    if (nextPage > this.props.paginatedProducts.length - 1) nextPage = 0;\r\n\r\n    this.props.setPage(nextPage);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <button className='btn-small card' type='button' onClick={this.goToPrevPage}>\r\n          prev\r\n        </button>\r\n\r\n        {this.props.paginatedProducts.map((_, index) => {\r\n          return (\r\n            <button\r\n              className={`btn-small card ${\r\n                index === this.props.page && 'clicked'\r\n              }`}\r\n              type='button'\r\n              key={index}\r\n              onClick={() => this.props.setPage(index)}\r\n            >\r\n              {index + 1}\r\n            </button>\r\n          );\r\n        })}\r\n        <button className='btn-small card' type='button' onClick={this.goToNextPage}>\r\n          next\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\n\r\n\r\nexport default class RecentList extends Component {\r\n  render() {\r\n   \r\n    return (\r\n      <dl\r\n      className=\"card\"\r\n      onClick={() => this.props.goShowDetail(this.props.item.isNotInterested, this.props.item.id)}\r\n    >\r\n      {/* <dd className=\"card-id\">{this.props.item.id}</dd> */}\r\n      <dd className=\"card-brand\">{this.props.item.brand}</dd>\r\n      <dd className=\"card-title\">{this.props.item.title}</dd>\r\n      <dd className=\"card-price\">\\{this.props.item.price}</dd>\r\n      {/* {this.props.item.isNotInterested && <dd>관심없는 상품</dd>} */}\r\n      <dd className=\"card-date\">\r\n        <span>접속 로그:</span>\r\n        <span>{`${this.props.date.hour}시 ${this.props.date.min}분 ${this.props.date.sec}초`}</span>\r\n      </dd>\r\n    </dl>\r\n    )\r\n  }\r\n}\r\n","import { ITEMS_PER_PAGE } from 'utils/config';\r\n\r\nexport const paginate = (products) => {\r\n  const pages = Math.ceil(products.length / ITEMS_PER_PAGE);\r\n\r\n  const newProducts = Array.from({ length: pages }, (_, index) => {\r\n    const start = ITEMS_PER_PAGE * index;\r\n\r\n    return products.slice(start, start + ITEMS_PER_PAGE);\r\n  });\r\n\r\n  return newProducts;\r\n};\r\n","export const ITEMS_PER_PAGE = 10;\r\nexport const DEFAULT_PAGE = 0;\r\nexport const DEFAULT_PATH_ID = 1;\r\nexport const BASE_URL = \"https://pob-coconut.github.io/Assignment2-b/\";\r\nexport const ERROR_MSG =\r\n  \"Failed to fetch data, please check your API or Internet connetction\";\r\n","import React, { Component } from \"react\";\r\nimport { ProductsList, ProductDetail, PageButtons } from \"components\";\r\nimport \"./Product.css\";\r\nimport { paginate } from \"utils/paginate\";\r\nimport {\r\n  DEFAULT_PAGE,\r\n  ERROR_MSG,\r\n  BASE_URL,\r\n  DEFAULT_PATH_ID,\r\n  ITEMS_PER_PAGE,\r\n} from \"utils/config\";\r\n\r\nclass ProductPage extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      isLoading: false,\r\n      products: [],\r\n      currentProduct: null,\r\n      recentViews: [],\r\n      page: DEFAULT_PAGE,\r\n      paginatedProducts: [],\r\n      pathId: DEFAULT_PATH_ID,\r\n    };\r\n\r\n    this.getProductDetail = this.getProductDetail.bind(this);\r\n    this.updateRecentViews = this.updateRecentViews.bind(this);\r\n    this.setIsNotInterested = this.setIsNotInterested.bind(this);\r\n    this.shuffleProduct = this.shuffleProduct.bind(this);\r\n    this.setPage = this.setPage.bind(this);\r\n  }\r\n\r\n  async componentDidMount() {\r\n    this.setState({ isLoading: true });\r\n\r\n    try {\r\n      const res = await fetch(`${BASE_URL}/data/productData.json`);\r\n      const data = await res.json();\r\n\r\n      if (!res.ok) throw new Error(ERROR_MSG);\r\n\r\n      const products = data.map((product, index) => {\r\n        product.id = index + 1;\r\n        product.isNotInterested = false;\r\n\r\n        return product;\r\n      });\r\n\r\n      this.setPathId();\r\n      const pathId = this.state.pathId - 1 || 0;\r\n\r\n      this.setState({ products });\r\n      this.setState({\r\n        currentProduct: products[pathId],\r\n        isLoading: false,\r\n      });\r\n      // PAGE IS BASED ON INDEX, SO PAGE 0 IS PAGE 1 FOR USER.\r\n      // If pathId is 19, ((19 + 1) / 10) - 1 = 1. So for user it is page 2.\r\n      this.setPage(Math.ceil((pathId + 1) / ITEMS_PER_PAGE) - 1);\r\n      this.updatePaginatedProducts();\r\n    } catch (err) {\r\n      this.setState({ isLoading: false });\r\n      console.error(err);\r\n    }\r\n  }\r\n\r\n  shuffleProduct() {\r\n    const newProducts = this.state.products.filter(\r\n      (product) => product.isNotInterested === false\r\n    );\r\n    const randomNumber = Math.floor(\r\n      Math.random() * (newProducts.length - 0) + 0\r\n    );\r\n\r\n    this.setState({ currentProduct: newProducts[randomNumber] });\r\n    this.updateRecentViews(newProducts[randomNumber].id);\r\n  }\r\n\r\n  setIsNotInterested(id) {\r\n    const newProducts = this.state.products.map((product) => {\r\n      if (product.id === id) product.isNotInterested = true;\r\n\r\n      return product;\r\n    });\r\n\r\n    this.setState({ products: newProducts });\r\n  }\r\n\r\n  getProductDetail(id) {\r\n    const targetProduct = this.state.products.find(\r\n      (product) => product.id === id\r\n    );\r\n\r\n    this.setPathId();\r\n    this.setState({ currentProduct: targetProduct });\r\n  }\r\n\r\n  updateRecentViews(id) {\r\n    const newRecentViews = this.state.recentViews.filter(\r\n      (product) => product.id !== id\r\n    );\r\n    const targetProduct = this.state.products.find(\r\n      (product) => product.id === id\r\n    );\r\n    const date = new Date();\r\n    const recentViewProduct = { ...targetProduct, date };\r\n\r\n    newRecentViews.unshift(recentViewProduct);\r\n\r\n    this.setState({ recentViews: newRecentViews });\r\n    this.setLocalStorage(newRecentViews);\r\n  }\r\n\r\n  setLocalStorage(data) {\r\n    localStorage.removeItem(\"data\");\r\n    localStorage.setItem(\"data\", JSON.stringify(data));\r\n  }\r\n\r\n  setPathId() {\r\n    const pathId = +window.location.pathname.split(\"/\")[2];\r\n\r\n    this.setState({ pathId });\r\n  }\r\n\r\n  setPage(index) {\r\n    this.setState({ page: index });\r\n    this.updatePaginatedProducts();\r\n  }\r\n\r\n  updatePaginatedProducts() {\r\n    this.setState((state) => ({\r\n      paginatedProducts: paginate(state.products)[state.page],\r\n    }));\r\n  }\r\n\r\n  render() {\r\n    if (this.state.isLoading || !this.state.currentProduct) return null;\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <ProductDetail\r\n          key={this.state.currentProduct.id}\r\n          curProduct={this.state.currentProduct}\r\n          setIsNotInterested={this.setIsNotInterested}\r\n          shuffleProduct={this.shuffleProduct}\r\n          updateRecentViews={this.updateRecentViews}\r\n        />\r\n\r\n        <aside className=\"products-list\">\r\n          <ProductsList\r\n            paginatedProducts={this.state.paginatedProducts}\r\n            getProductDetail={this.getProductDetail}\r\n            updateRecentViews={this.updateRecentViews}\r\n          />\r\n          <PageButtons\r\n            paginatedProducts={this.state.paginatedProducts}\r\n            setPage={this.setPage}\r\n            page={this.state.page}\r\n          />\r\n        </aside>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProductPage;\r\n","export const getBrand = (props) => {\r\n  const map = new Map();\r\n  props.forEach((element) => {\r\n    map.set(element.brand, true);\r\n  });\r\n\r\n  return map;\r\n};\r\n","const today = new Date().getDate();\r\n\r\nexport const getStorage = () => {\r\n  const storageData = JSON.parse(localStorage.getItem(\"data\") || \"[]\")\r\n    .filter((i) => new Date(i.date).getDate() === today)\r\n    .sort((a, b) => a.id - b.id);\r\n\r\n  return storageData;\r\n};\r\n","import React, { Component } from \"react\";\r\nimport \"./RecentListPage.css\";\r\nimport { RecentList } from \"components\";\r\n\r\nimport { getBrand } from \"utils/data/getBrand\";\r\nimport { getStorage } from \"utils/storage/getStorage\";\r\n\r\nconst storageData = getStorage();\r\n\r\nclass RecentListPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.goShowDetail = this.goShowDetail.bind(this);\r\n    this.state = {\r\n      data: storageData.slice(),\r\n      brand: getBrand(storageData),\r\n      originData: [],\r\n      interestToggle: false,\r\n      priceSortToggle: 0,\r\n      recentSortToggle: false,\r\n    };\r\n  }\r\n\r\n  getData() {\r\n    const data = this.state.data.filter((item) => {\r\n      return (\r\n        this.state.brand.get(item.brand) &&\r\n        (this.state.interestToggle ? item.isNotInterested : true)\r\n      );\r\n    });\r\n    return data;\r\n  }\r\n\r\n  onFilterBrand(name) {\r\n    const { brand } = this.state;\r\n    brand.set(name, !brand.get(name));\r\n    this.setState({ ...this.state, brand });\r\n  }\r\n\r\n  onInterset() {\r\n    this.setState({\r\n      ...this.state,\r\n      interestToggle: !this.state.interestToggle,\r\n    });\r\n  }\r\n\r\n  onSortCheap() {\r\n    const { priceSortToggle, data } = this.state;\r\n    const newToggle = (priceSortToggle + 1) % 3;\r\n    this.setState({\r\n      ...this.state,\r\n      recentSortToggle: false,\r\n      priceSortToggle: newToggle,\r\n      data:\r\n        newToggle === 0\r\n          ? storageData.slice()\r\n          : newToggle === 1\r\n          ? data.sort((a, b) => a.price - b.price)\r\n          : data.sort((a, b) => b.price - a.price),\r\n    });\r\n  }\r\n\r\n  onSortRecent() {\r\n    const { recentSortToggle, data } = this.state;\r\n\r\n    this.setState({\r\n      ...this.state,\r\n      priceSortToggle: 0,\r\n      recentSortToggle: !recentSortToggle,\r\n      data: !recentSortToggle\r\n        ? data.sort((a, b) => new Date(b.date) - new Date(a.date))\r\n        : storageData.slice(),\r\n    });\r\n  }\r\n\r\n  goShowDetail(isNotInterested, id) {\r\n    // isNotInterested가 true면 관심 있는 것 -> 페이지 이동\r\n    if (!isNotInterested) {\r\n      this.props.history.push(`/product/${id}`);\r\n    } else {\r\n      // isNotInterested가 false면 관심 없음 -> alert('접근금지')\r\n      alert(\"관심없는 제품입니다.\");\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"recent-page\">\r\n        <div className=\"recent-container\">\r\n          <div className=\"header card inline-block\"> 최근 조회 이력</div>\r\n          <div className=\"header\">\r\n            <div className=\"filter\">\r\n              <span>브랜드 필터: </span>\r\n              {Array.from(this.state.brand.entries()).map(\r\n                ([name, isChecked]) => (\r\n                  <label\r\n                    className={\"card \" + (isChecked ? \"clicked\" : \"\")}\r\n                    key={name}\r\n                  >\r\n                    {name}\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      defaultChecked={isChecked}\r\n                      onChange={() => {\r\n                        this.onFilterBrand(name);\r\n                      }}\r\n                    />\r\n                  </label>\r\n                )\r\n              )}\r\n            </div>\r\n            <div className=\"option\">\r\n              <span>옵션: </span>\r\n              <label\r\n                className={\r\n                  \"card \" + (this.state.interestToggle ? \"clicked\" : \"\")\r\n                }\r\n              >\r\n                관심없는 상품 제거\r\n                <input type=\"checkbox\" onChange={(e) => this.onInterset()} />\r\n              </label>\r\n              <button\r\n                className={\r\n                  \"card \" + (this.state.recentSortToggle ? \"clicked\" : \"\")\r\n                }\r\n                onClick={() => this.onSortRecent()}\r\n              >\r\n                최근 조회 순\r\n              </button>\r\n              <button\r\n                className={\r\n                  \"card \" + (this.state.priceSortToggle ? \"clicked\" : \"\")\r\n                }\r\n                onClick={() => this.onSortCheap()}\r\n              >\r\n                {this.state.priceSortToggle === 2\r\n                  ? \"가격 높은순\"\r\n                  : \"가격 낮은순\"}\r\n              </button>\r\n            </div>\r\n          </div>\r\n          <div className=\"data\">\r\n            {this.getData(this.state.data).map((i) => {\r\n              const date = new Date(i.date);\r\n              const hour = date.getHours();\r\n              const min = date.getMinutes();\r\n              const sec = date.getSeconds();\r\n              return (\r\n                <RecentList\r\n                  key={i.id}\r\n                  item={i}\r\n                  goShowDetail={this.goShowDetail}\r\n                  date={{ hour, min, sec }}\r\n                />\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RecentListPage;\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './Error.css';\r\n\r\nexport default class ErrorPage extends Component {\r\n  render() {\r\n    return (\r\n      <div className='error-page'>\r\n        <h1>Lost your way?</h1>\r\n        <p>\r\n          Sorry, we can't find that page. Error 404\r\n          <br />\r\n          You'll find lots to explore on the home page\r\n        </p>\r\n        <Link className='error-page--btn' to='/'>\r\n          <span>Back Home</span>\r\n        </Link>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport { ProductPage, RecentListPage, ErrorPage } from \"pages\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <Switch>\r\n        <Route\r\n          exact\r\n          path={[\"/\", \"/product\", \"/product/:id\"]}\r\n          component={ProductPage}\r\n        />\r\n        <Route exact path=\"/recentList\" component={RecentListPage} />\r\n        <Route path=\"*\" component={ErrorPage} />\r\n      </Switch>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n  <BrowserRouter basename=\"Assignment2-b\">\r\n    <App />\r\n  </BrowserRouter>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}